variables:
  DOCKER_AUTH_CONFIG: "echo {\"auths\": {\"registry.git.rwth-aachen.de\": {\"auth\": \"${GIT_TOKEN}\"}}}"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2375/
  

services:
  - docker:24.0.2-dind

info:
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: build
  services:
    - docker:24.0.2-dind
  script:
    - gcc --version
    - nvcc --version
    - cmake --version
    - mpicc --version

build-docker:
  stage: build
  image: docker:24.0.2-dind
  before_script:
    - docker info
  script:
    - cd cicd/
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11 .
    - docker push registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11

build-mpi:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: build
  before_script:
    - cd relearn && mkdir build-docker && cd build-docker  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 .. && make -j 16
  artifacts:
    paths:
      - relearn/build-docker



build-clang-tidy:
  rules:
  - if: $CLANG_TIDY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: build
  before_script:
    - cd relearn && mkdir build-clang-tidy && cd build-clang-tidy  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 .. && chmod 755 ../check_tidy.sh && ../check_tidy.sh

# run tests using the binary built before
test-mpi-once:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./bin/relearn_tests --gtest_filter=*ONCE
  dependencies: 
    - build-mpi
  artifacts:
    paths:
      - relearn/build-docker
      
# run tests using the binary built before
test-mpi-multiple:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies: 
    - build-mpi
  artifacts:
    paths:
      - relearn/build-docker

build-nompi:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: build
  services:
    - docker:24.0.2-dind
  before_script:
    - gcc --version
    - nvcc --version
    - cmake --version
    - nvidia-smi
    - mpicc --version
    - cd relearn && mkdir build-docker-nompi && cd build-docker-nompi  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 -DENABLE_MPI=0 .. && make -j 16
  artifacts:
    paths:
      - relearn/build-docker-nompi

# run tests using the binary built before
test-nompi-once:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./bin/relearn_tests --gtest_filter=*ONCE
  dependencies: 
    - build-nompi
  artifacts:
    paths:
      - relearn/build-docker-nompi

# run tests using the binary built before
test-nompi-multiple:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies: 
    - build-nompi
  artifacts:
    paths:
      - relearn/build-docker-nompi      
   
deploy-single:
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker  

deploy-create:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker

deploy-disable:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker       
  
deploy-single-nompi:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi 
      
deploy-create-nompi:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi     

deploy-disable-nompi:   
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi       
   
deploy-mpi-1:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker  
   
deploy-mpi-2:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 2 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 8
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
      
deploy-mpi-4:    
  rules:
  - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 4 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 4
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
      
deploy-mpi-8:  
  rules:
  - if: $CLANG_TIDY == null && ($TEST_HHLR == null || $TEST_HHLR == "FALSE")
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 8 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 2
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 

benchmark-hhlr:
  rules:
  - if: $TEST_HHLR == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-gcc-11
  stage: deploy 
  services:
    - docker:24.0.2-dind
  script:
    - sshpass -p $HHLR_PW ssh -o StrictHostKeyChecking=no da03robo@lcluster18.hrz.tu-darmstadt.de "./gitlab-script.sh"
