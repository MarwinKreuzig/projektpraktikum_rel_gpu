build-mpi:
  image: relearn-ci-gcc-11
  stage: build
  before_script:
    - cd relearn && mkdir build-docker && cd build-docker  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 .. && make -j 16
  artifacts:
    paths:
      - relearn/build-docker

build-clang-tidy:
  rules:
  - if: '$CLANG_TIDY == "FALSE"'
    when: never
  - if: '$CLANG_TIDY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: build
  before_script:
    - cd relearn && mkdir build-clang-tidy && cd build-clang-tidy  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 .. && chmod 755 ../check_tidy.sh && ../check_tidy.sh

# run tests using the binary built before
test-mpi-once:
  image: relearn-ci-gcc-11
  stage: test
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./runTests --gtest_filter=*ONCE
  dependencies: 
    - build-mpi
  artifacts:
    paths:
      - relearn/build-docker
      
# run tests using the binary built before
test-mpi-multiple:
  image: relearn-ci-gcc-11
  stage: test
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./runTests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies: 
    - build-mpi
  artifacts:
    paths:
      - relearn/build-docker

build-nompi:
  image: relearn-ci-gcc-11
  stage: build
  before_script:
    - cd relearn && mkdir build-docker-nompi && cd build-docker-nompi  
  script:
    - cmake -DENABLE_CLANG_TIDY=0 -DENABLE_MPI=0 .. && make -j 16
  artifacts:
    paths:
      - relearn/build-docker-nompi

# run tests using the binary built before
test-nompi-once:
  image: relearn-ci-gcc-11
  stage: test
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./runTests --gtest_filter=*ONCE
  dependencies: 
    - build-nompi
  artifacts:
    paths:
      - relearn/build-docker-nompi

# run tests using the binary built before
test-nompi-multiple:
  image: relearn-ci-gcc-11
  stage: test
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./runTests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies: 
    - build-nompi
  artifacts:
    paths:
      - relearn/build-docker-nompi      
   
deploy-single:
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker  

deploy-create:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker

deploy-disable:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker    

deploy-enable:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --enable-interrupts relearn/input/tests/enable-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker     
  
deploy-single-nompi:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker-nompi/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi 
      
deploy-create-nompi:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker-nompi/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi     

deploy-disable-nompi:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker-nompi/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi    

deploy-enable-nompi:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - relearn/build-docker-nompi/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --enable-interrupts relearn/input/tests/enable-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    paths:
      - relearn/build-docker-nompi    
      
   
deploy-mpi-1:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/network.txt --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
      
   
deploy-mpi-2:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 2 relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 8
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
      
   
deploy-mpi-4:    
  rules:
  - if: '$TEST_DEPLOY == "FALSE"'
    when: never
  - if: '$TEST_DEPLOY == "TRUE"'
    when: always
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 4 relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 4
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
      
   
deploy-mpi-8:  
  image: relearn-ci-gcc-11
  stage: deploy
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 8 relearn/build-docker/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 2
  dependencies:
    - test-mpi-multiple
  artifacts:
    paths:
      - relearn/build-docker 
