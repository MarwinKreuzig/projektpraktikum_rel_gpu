variables:
  DOCKER_AUTH_CONFIG: "echo {\"auths\": {\"registry.git.rwth-aachen.de\": {\"auth\": \"${GIT_TOKEN}\"}}}"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376/


services:
  - docker:24.0.2-dind

build-mpi:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: build
  before_script:
    - cd relearn && mkdir build-docker && cd build-docker
  script:
    - cmake -DENABLE_CLANG_TIDY=0 -DENABLE_CUDA=0 .. && make -j 16
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

# run tests using the binary built before
test-mpi-once:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./bin/relearn_tests --gtest_filter=*ONCE
  dependencies:
    - build-mpi
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker


# run tests using the binary built before
test-mpi-multiple:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies:
    - build-mpi
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

build-nompi:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: build
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn && mkdir build-docker-nompi && cd build-docker-nompi
  script:
    - cmake -DENABLE_CLANG_TIDY=0 -DENABLE_MPI=0 -DENABLE_CUDA=0 .. && make -j 16
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi

# run tests using the binary built before
test-nompi-once:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./bin/relearn_tests --gtest_filter=*ONCE
  dependencies:
    - build-nompi
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi


# run tests using the binary built before
test-nompi-multiple:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-nompi
  script:
    - ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies:
    - build-nompi
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi

deploy-single:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

deploy-create:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

deploy-disable:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

deploy-single-nompi:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-nompi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi

deploy-create-nompi:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --creation-interrupts relearn/input/tests/create-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi


deploy-disable-nompi:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - relearn/build-docker-nompi/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16 --disable-interrupts relearn/input/tests/disable-100-interrupt.txt
  dependencies:
    - test-nompi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi


deploy-mpi-1:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

deploy-mpi-2:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 2 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 8
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

deploy-mpi-4:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 4 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 4
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker


deploy-mpi-8:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 8 relearn/build-docker/bin/relearn --algorithm barnes-hut --steps 1000 --num-neurons-per-rank 500 --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 2
  dependencies:
    - test-mpi-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker

info:
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: build
  services:
    - docker:24.0.2-dind
  script:
    - gcc --version
    - nvcc --version
    - cmake --version
    - mpicc --version

#build-docker:
#  stage: build
#  image: docker:24.0.2-dind
#  services:
#    - docker:24.0.2-dind
#  before_script:
#    - docker info
#  script:
#    - cd cicd/
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#    - docker pull registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda:latest || true
#    - docker build --cache-from registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda:latest -t registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda:latest .
#    - docker push registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda:latest
#

build-nompi-cuda:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: build
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn && mkdir build-docker-nompi-cuda && cd build-docker-nompi-cuda
  script:
    - cmake -DENABLE_CLANG_TIDY=0 -DENABLE_MPI=0 .. && make -j 16
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi-cuda

build-mpi-cuda:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: build
  before_script:
    - cd relearn && mkdir build-docker-cuda && cd build-docker-cuda
  script:
    - cmake -DENABLE_CLANG_TIDY=0 .. && make -j 16
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-cuda

test-nompi-cuda-multiple:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-nompi-cuda
  script:
    - ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies:
    - build-nompi-cuda
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-nompi-cuda

test-mpi-cuda-multiple:
  rules:
    - if: $SCHEDULED == null || $SCHEDULED == "FALSE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: test
  services:
    - docker:24.0.2-dind
  before_script:
    - cd relearn/build-docker-cuda
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 ./bin/relearn_tests --gtest_filter=*-*ONCE  --gtest_repeat=10 --gtest_shuffle
  dependencies:
    - build-mpi-cuda
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-cuda

deploy-cuda:
  rules:
    - if: $TEST_DEPLOY == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none && mpiexec -n 1 relearn/build-docker-cuda/bin/relearn --algorithm barnes-hut --steps 1000 --file relearn/input/positions.txt --graph relearn/input/ --synaptic-elements-lower-bound 1.3 --synaptic-elements-upper-bound 1.7 --openmp 16
  dependencies:
    - test-mpi-cuda-multiple
  artifacts:
    expire_in: 1 week
    paths:
      - relearn/build-docker-cuda

benchmark:
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true" && $SCHEDULED == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - mkdir artifacts
    - cd artifacts
    - curl -H "PRIVATE-TOKEN:$API_TOKEN" -o artifact1.zip https://git.rwth-aachen.de/api/v4/projects/48713/jobs/artifacts/master/download?job=build-mpi
    - unzip -qq artifact1.zip
    - ls relearn
    - ./relearn/build-docker/bin/relearn_benchmarks

benchmark-cuda:
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true" && $SCHEDULED == "TRUE"
  image: registry.git.rwth-aachen.de/parallel/relearn/relearn-ci-cuda
  stage: deploy
  services:
    - docker:24.0.2-dind
  script:
    - mkdir artifacts
    - cd artifacts
    - curl -H "PRIVATE-TOKEN:$API_TOKEN" -o artifact1.zip https://git.rwth-aachen.de/api/v4/projects/48713/jobs/artifacts/master/download?job=build-mpi-cuda
    - unzip -qq artifact1.zip
    - ls relearn
    - ./relearn/build-docker-cuda/bin/relearn_benchmarks
